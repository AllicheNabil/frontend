import { Component, Input, OnInit, inject, Output, EventEmitter } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import { MatButtonModule } from '@angular/material/button';
import { MatIconModule } from '@angular/material/icon';
import { ReactiveFormsModule, FormGroup, FormControl, Validators } from '@angular/forms';
import { AddLabTestUseCase } from '@app/features/lab-tests/domain/labTestUsecases/add-lab-test.usecase';
import { LabTestEntity } from '@app/features/lab-tests/domain/lab-test.entity';

@Component({
  selector: 'app-add-lab-test',
  standalone: true,
  imports: [
    CommonModule,
    MatFormFieldModule,
    MatInputModule,
    MatButtonModule,
    MatIconModule,
    ReactiveFormsModule,
  ],
  templateUrl: './add-lab-test.component.html',
  styleUrls: ['./add-lab-test.component.css'],
})
export class AddLabTestComponent {
  @Input() patientId!: number;
  @Output() labTestAdded = new EventEmitter<void>();
  @Output() cancel = new EventEmitter<void>();

  private addLabTestUsecase = inject(AddLabTestUseCase);

  labTestForm = new FormGroup({
    labTestName: new FormControl('', Validators.required),
    labTestDate: new FormControl('', Validators.required),
  });

  onSubmit() {
    if (this.labTestForm.valid) {
      const newLabTest: LabTestEntity = new LabTestEntity({
        labTestId: 0, // ID will be generated by the backend
        labTestName: this.labTestForm.value.labTestName!,
        labTestDate: this.labTestForm.value.labTestDate!,
        patientId: this.patientId,
      });

      this.addLabTestUsecase.execute(newLabTest).subscribe({
        next: (labTest: LabTestEntity) => {
          console.log('Lab test added successfully:', labTest);
          this.labTestAdded.emit();
        },
        error: (error: Error) => {
          console.error('Error adding lab test:', error);
        },
      });
    }
  }
 

  onCancel() {
    this.cancel.emit();
  }
}
